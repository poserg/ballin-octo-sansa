/*1. Отчёт по заявкам в разрезе ведомств
        Предполагаемые входные параметры:
                - from_date - строка - дата начала диапазона
                - to_date - строка - дата завершения диапазона
        
        Предполагаемые выходные параметры:
                - department_name - строка - название ведомства
                - application_count - число - кол-во заявок в ведомстве
                
        Сортировка по полю department_name. Нужны только те ведомства, по которым есть заявки.
*/

with tmp1 (app_id) as (
	select ah.application_id
	from application_hist_vw ah
    where upper(ah.state_name) not in (upper('Черновик'),upper('Ошибка отправки в ведомство'),
            	upper('Ведомство недоступно')))
select pa.agency_office_name as department_name, count(*) as application_count
from po_application pa, tmp1 t
where pa.agency_office_name is not null
	and pa.application_id = t.app_id

<if test="inFromDate != null">         
	and cast (pa.date_inserted as date) <= #{inFromDate}
</if>
<if test="inToDate != null">         
    and cast (pa.date_inserted as date) >= #{inToDate}
</if>

group by pa.agency_office_name
order by pa.agency_office_name;


/*2. Отчёт по заявкам в разрезе ведомств с детализацией по статусам
        Предполагаемые входные параметры:
                - from_date - строка - дата начала диапазона
                - to_date - строка - дата завершения диапазона
		- is_send_to_office - true/false - учитывать заявки со статусом "Отправлено в ведомство"
		- is_error_sending_to_office - true/false - учитывать заявки со статусом "Ошибка отправки в ведомство"
		- is_in_reviewing - true/false - учитывать заявки со статусом "В процессе рассмотрения"
		- is_required_additional_info - true/false - учитывать заявки со статусом "Требуются дополнительные сведения"
		- is_executed - true/false - учитывать заявки со статусом "Исполнено"
		- is_denied - true/false - учитывать заявки со статусом "Отказано"
		- is_cancelled - true/false - учитывать заявки со статусом "Отменено"
		- is_other - true/false - учитывать заявки со всеми остальными статусами
        
        Предполагаемые выходные параметры:
                - department_id - число - идентификатор ведомства
                - department_name - строка - название ведомства
                - state_id - число - идентификатор статуса
                - state_name - строка - название статуса
                - application_count - число - кол-во заявок в ведомстве с определённом статусом
                
        Сортировка по полю department_name. Нужны только те ведомства, по которым есть заявки.
*/
with tmp0 as (select 'Отправлено в ведомство' as st_name union select 'В процессе рассмотрения' 
				union select 'Требуются дополнительные сведения' union select 'Исполнено'
 				union select 'Отказано' union select 'Отменено'),
	tmp as (select pa.agency_office_name as dep_name, a.state_name as st_name,
				count (a.application_id) as app_count
			from (select ah.application_id, ah.state_name
					from application_hist_vw ah
    				where upper(ah.state_name) not in (upper('Черновик'),upper('Ошибка отправки в ведомство'),
            		upper('Ведомство недоступно'))) a, po_application pa
			where pa.application_id = a.application_id
<if test="inFromDate != null">         
				and cast (pa.date_inserted as date) <= #{inFromDate}
</if>
<if test="inToDate != null">         
			    and cast (pa.date_inserted as date) >= #{inToDate}
</if>
            group by pa.agency_office_name,a.state_name
    		),
    tmp1 as (select a.st_name, a.st_code, a1.dep_name, a1.dep_id
			from
			(select case when b0.st_name is null then t0.st_name else b0.st_name end, b0.st_code 
            from tmp0 t0
            	full outer join (select state_name as st_name, max(status_code) as st_code 
            					from po_application_state_history group by state_name) b0 using (st_name)) a,
			(select agency_office_name as dep_name, max(department_id) as dep_id 
            	from po_application group by agency_office_name) a1)

select max (a.department_id) as department_id, a.department_name, max(a.state_id) as state_id,a.state_name, sum(a.application_count) as application_count
from (
	select t1.dep_id as department_id, t1.dep_name as department_name, 
		case when t1.st_name in ('Отправлено в ведомство','В процессе рассмотрения',
    								'Требуются дополнительные сведения','Исполнено','Отказано','Отменено') then t1.st_code
			else null end as state_id,  
		case when t1.st_name in ('Отправлено в ведомство','В процессе рассмотрения',
    								'Требуются дополнительные сведения','Исполнено','Отказано','Отменено') then t1.st_name
			else 'others' end as state_name, 
		case when t.app_count is not null then t.app_count else 0 end as application_count
	from tmp1 t1
		left outer join tmp t on (t.st_name = t1.st_name and t.dep_name = t1.dep_name)
	where t1.dep_name is not null)a
where a.state_name in ('0'
<if test="isSendToOffice == true">
,'Отправлено в ведомство'
</if>
<if test="isInReviewing == true">
,'В процессе рассмотрения'
</if>
<if test="isRequiredAdditionalInfo == true">
,'Требуются дополнительные сведения'
</if>
<if test="isExecuted == true">
,'Исполнено'
</if>
<if test="isDenied == true">
,'Отказано'
</if>
<if test="isCancelled == true">
,'Отменено'
</if>
<if test="isOther == true">
,'others'
</if>
)
group by a.department_name,a.state_name
order by a.department_name,a.state_name;


/*3. Отчёт по заявкам в разрезе услуг.
        Предполагаемые входные параметры:
                - from_date - строка - дата начала диапазона
                - to_date - строка - дата завершения диапазона
                
                Возможен один из следующих параметров
                        - is_all - true/false - поиск по всем услугам
                        - is_municipal - true/false - поиск только по муниципальным услугам
                        - is_regional - true/false - поиск только по региональным услугам
        
        Предполагаемые выходные параметры:
                - service_name - строка - название услуги
                - application_count - число - кол-во заявок по услуге

        Сортировка по полю service_name. Нужны только те услуги, по которым есть заявления.        
*/

with tmp1 (app_id, srv_adm_lvl, srv_name) as (
	select ah.application_id, ah.serv_adm_lev, ah.service_name
	from application_hist_vw ah
    where upper(ah.state_name) not in (upper('Черновик'),upper('Ошибка отправки в ведомство'),
            	upper('Ведомство недоступно')))

select t.srv_name as service_name, count(t.app_id) as application_count
from po_application pa, tmp1 t
where pa.application_id = t.app_id


<if test="inFromDate != null">         
	and cast (pa.date_inserted as date) <= #{inFromDate}
</if>
<if test="inToDate != null">         
    and cast (pa.date_inserted as date) >= #{inToDate}
</if>

<choose>
<when test="isMunicipal == true">
	and t.srv_adm_lvl = (select adm_lev_dict_id from cat_adm_lev_dict where name = 'MUNICIPAL')
</when>
<when test="isRegional == true">
	and t.srv_adm_lvl = (select adm_lev_dict_id from cat_adm_lev_dict where name = 'REGIONAL')
</when>
</choose>

	
group by t.srv_name
order by t.srv_name;


/*4. Отчёт по заявкам в разрезе услуг с детализацией по статусам
        Предполагаемые входные параметры:
                - from_date - строка - дата начала диапазона
                - to_date - строка - дата завершения диапазона
		- is_send_to_office - true/false - учитывать заявки со статусом "Отправлено в ведомство"
		- is_error_sending_to_office - true/false - учитывать заявки со статусом "Ошибка отправки в ведомство"
		- is_in_reviewing - true/false - учитывать заявки со статусом "В процессе рассмотрения"
		- is_required_additional_info - true/false - учитывать заявки со статусом "Требуются дополнительные сведения"
		- is_executed - true/false - учитывать заявки со статусом "Исполнено"
		- is_denied - true/false - учитывать заявки со статусом "Отказано"
		- is_cancelled - true/false - учитывать заявки со статусом "Отменено"
		- is_other - true/false - учитывать заявки со всеми остальными статусами

		
		- is_category_need - true/false - нужны категории услуг
		- is_life_situation_need - true/false - нужны жизненные ситуации услуг

                Возможен один из следующих параметров
                        - is_all - true/false - поиск по всем услугам
                        - is_municipal - true/false - поиск только по муниципальным услугам
                        - is_regional - true/false - поиск только по региональным услугам
        
        Предполагаемые выходные параметры:
                - service_id - число - идентификатор услуги
                - service_name - строка - название услуги 
                - state_id - число - идентификатор статуса
                - state_name - строка - название статуса
                - application_count - число - кол-во заявок по услуге с определённым статусом
                
                Если установлен флаг is_category_need, тогда:
                        - category - строка - категорию/подкатегорию услуги
                Если установлен флаг is_life_situation_need, тогда:
                        - life_situation - жизненная ситуация

        Сортировка по полю service_name. Нужны только те услуги, по которым есть заявления.
*/

with tmp0 as (select 'Отправлено в ведомство' as st_name union select 'В процессе рассмотрения' 
				union select 'Требуются дополнительные сведения' union select 'Исполнено'
 				union select 'Отказано' union select 'Отменено'),
	tmp as (select pa.service_id as serv_id, a.state_name as st_name,
				count (a.application_id) as app_count
			from (select ah.application_id, ah.serv_adm_lev, ah.service_name, ah.state_name
					from application_hist_vw ah
    				where upper(ah.state_name) not in (upper('Черновик'),upper('Ошибка отправки в ведомство'),
            				upper('Ведомство недоступно'))) a, po_application pa
			where pa.application_id = a.application_id
<if test="inFromDate != null">         
				and cast (pa.date_inserted as date) <= #{inFromDate}
</if>
<if test="inToDate != null">         
    			and cast (pa.date_inserted as date) >= #{inToDate}
</if>
   			group by pa.service_id,a.state_name),
   
    tmp1 as (select a.st_name, a.st_code, a1.serv_id, a1.srv_name, a1.adm_lev
			from 
            (select case when b0.st_name is null then t0.st_name else b0.st_name end, b0.st_code 
            	from tmp0 t0
            		full outer join (select state_name as st_name, max(status_code) as st_code 
            						from po_application_state_history group by state_name) b0 using (st_name)) a,
			(select pa.service_id as serv_id, max(cs.short_name) as srv_name, max(cs.adm_lev_dict_id) as adm_lev
            	from po_application pa, cat_service cs 
                where cs.service_id = pa.service_id
                group by pa.service_id) a1),
    
    tmp2 as (select distinct cs.service_id as serv_id, csc.name, lm.lm_name
    		from tmp t, cat_service cs 
    			left outer join cat_service_catalog csc using (service_catalog_id)
    			left outer join lm_service_vw lm using (service_id)
                where cs.service_id = t.serv_id)

select max (a.service_id) as service_id, a.service_name, max(a.state_id) as state_id,a.state_name, 
			sum(a.application_count) as application_count
<if test="isCategoryNeed == true">
	,max(a.category) as category
</if>
<if test="isLifeSituationNeed == true">
	,max(a.life_situation) as life_situation
</if>

from (
	select t1.serv_id as service_id, t1.srv_name as service_name, 
		case when t1.st_name in ('Отправлено в ведомство','В процессе рассмотрения',
    								'Требуются дополнительные сведения','Исполнено','Отказано','Отменено') then t1.st_code
			else null end as state_id,  
		case when t1.st_name in ('Отправлено в ведомство','В процессе рассмотрения',
    								'Требуются дополнительные сведения','Исполнено','Отказано','Отменено') then t1.st_name
			else 'others' end as state_name, 
    	case when t.app_count is not null then t.app_count else 0 end as application_count,
		case when t1.st_name in ('Отправлено в ведомство','В процессе рассмотрения',
    								'Требуются дополнительные сведения','Исполнено','Отказано','Отменено') then t2.name
			else null end as category,  
		case when t1.st_name in ('Отправлено в ведомство','В процессе рассмотрения',
    								'Требуются дополнительные сведения','Исполнено','Отказано','Отменено') then t2.lm_name
			else null end as life_situation 

	from tmp2 t2, tmp1 t1
		left outer join tmp t on (t.st_name = t1.st_name and t.serv_id = t1.serv_id)
	where t1.serv_id = t2.serv_id
<choose>
<when test="isMunicipal == true">
		and t1.adm_lev = (select adm_lev_dict_id from cat_adm_lev_dict where name = 'MUNICIPAL')
</when>
<when test="isRegional == true">
		and t1.adm_lev = (select adm_lev_dict_id from cat_adm_lev_dict where name = 'REGIONAL')
</when>
</choose>)a

where a.state_name in ('0'
<if test="isSendToOffice == true">
,'Отправлено в ведомство'
</if>
<if test="isInReviewing == true">
,'В процессе рассмотрения'
</if>
<if test="isRequiredAdditionalInfo == true">
,'Требуются дополнительные сведения'
</if>
<if test="isExecuted == true">
,'Исполнено'
</if>
<if test="isDenied == true">
,'Отказано'
</if>
<if test="isCancelled == true">
,'Отменено'
</if>
<if test="isOther == true">
,'others'
</if>
)
group by a.service_name,a.state_name
order by a.service_name,a.state_name;